{"version":3,"sources":["CV.js","resources/folder.svg","resources/8890.webp","ProjectArticles/VGC.js","resources/browser.JPG","ProjectArticles/VirtualWebUI.js","ProjectArticles/BrowserUI.js","ProjectArticles/APM.js","resources/easygrade.png","ProjectArticles/EasyGrade.js","ProjectArticles/AICar.js","Projects.js","resources/award.jpg","resources/RY3A0877.jpg","BlogArticles/About.js","Blog.js","App.js","reportWebVitals.js","index.js"],"names":["CV","props","className","href","src","React","Component","VGC","image_8890","alt","VirtualWebUI","image","BrowserUI","APM","EasyGrade","target","AICar","width","height","title","frameborder","allow","allowfullscreen","Projects","path","to","folder","About","ageDifMs","Date","now","getTime","ageDate","age","Math","abs","getUTCFullYear","image_award","Blog","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72698ad1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CV.css';\r\n\r\nclass CV extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"CV-Header\">CV</header>\r\n                <main className=\"CV-Main\">\r\n                    <div className=\"Download\"><a href=\"BenGironeResume.pdf\">Download as PDF</a></div>\r\n                    <iframe src=\"./Resume.html\"></iframe>\r\n                </main>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CV;","export default __webpack_public_path__ + \"static/media/folder.5a797390.svg\";","export default __webpack_public_path__ + \"static/media/8890.c83028a3.webp\";","import image_8890 from '../resources/8890.webp';\r\n\r\nfunction VGC() {\r\n    return (\r\n        <div>\r\n            <img className=\"Article-Media\" src={image_8890} alt=\"Virtual GC\"/>\r\n            <p className=\"Article-Text\">\r\n                The Virtual G.C. is a simulator that simulates several models of Agilent Gas Chromatographs. It was devloped for internal use.\r\n                It simulates the back-end XML web service that several front-end \"Data Systems\" use to control the instrument.\r\n                The Virtual G.C. is written in Visual Studio C# and uses Windows Forms for GUI. The architecture is Model View Controller.\r\n            </p>\r\n            <p className=\"Article-Text\">\r\n                The GUI is presented at startup and allows users to customize the Virtual Gas Chromatograph hardware. \r\n                After the Virtual G.C. is instantiated through the UI, the state of the virtual instrument begins being simulated.\r\n                Actuals and setpoints can be monitored and set through seperate front-end software. Fake signal can be sent to the front-end as well.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VGC;","export default __webpack_public_path__ + \"static/media/browser.d2e6c975.JPG\";","import image from '../resources/browser.JPG';\r\n\r\nfunction VirtualWebUI() {\r\n    return (\r\n        <div>\r\n            <div className=\"Article-Media\">\r\n                <img src={image} />\r\n            </div>\r\n\r\n            <p className=\"Article-Text\">\r\n                This project was a solo project I was assigned. The goal of the project was to simulate the API that feeds Agilent's Browser UI normally controls a physical instrument.\r\n                Internal Agilent users can log in to an Angular admin page hosted in AWS and start a simulation. The simulation presents the user with a standard front-end that connects to the simulated back-end.\r\n                The backend simulation is a Node JS server. \r\n            </p>\r\n\r\n            <p>\r\n                The cloud tech used in the project is S3, EC2, Elastik Beanstalk and RDS.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VirtualWebUI;","import image from '../resources/browser.JPG';\r\n\r\n\r\nfunction BrowserUI() {\r\n    return (\r\n        <div>\r\n            <div className=\"Article-Media\">\r\n                <img src={image} />\r\n            </div>\r\n\r\n            <p className=\"Article-Text\">\r\n                Agilent's Browser UI is a large team project with ~100,000 lines of code. It is developed with an EXT.js front-end. The back-end is a Node.js API. Some functionality, such as signals, is also provided by a socket.io server. \r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                Every modern Agilent Gas Chromatograph serves its own Browser UI and API from the embedded firmware. The UI is used to control the instuments firmware/hardware. \r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                My responsibilities were defect resolution, performance optimization and the development of new feautures.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BrowserUI;","function APM() {\r\n    return (\r\n        <div>\r\n            <p className=\"Article-Text\">\r\n                Top secret! No image here. \r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                I initiated this project myself. I saw that the existing methods being used were insufficient and asked for the time to research and develop a better solution. This project was a year long effort to create a reliable system to match the peaks in a reference and sample signal. In the sample signal, the peaks from the reference signal could have shifted places several minutes. There could also be severe warping, data loss and impurity peaks.\r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                I cannot legally mention any specifics of the algorithm or mention how it is used by Agilent. I can say that it works very well and manages to have a quadratic time complexity. This project involved a lot of machine learning, data science, statistics and \"clever\" math. I initially developed the algorithm in python. When it became sufficiently accurate, I re-implemented it in embedded C++. \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default APM;","export default __webpack_public_path__ + \"static/media/easygrade.70fe7e38.png\";","import image from '../resources/easygrade.png';\r\n\r\nfunction EasyGrade() {\r\n    return (\r\n        <div>\r\n            <div className=\"Article-Media\">\r\n                <img src={image}></img>\r\n            </div>\r\n\r\n            <p><a href=\"https://easygrade.app\" target=\"_blank\">Open The Site</a></p>\r\n\r\n            <p className=\"Article-Text\">\r\n                Easy grade is a site I developed for myself and my fellow students. It is a calculator that can tell students what grades they will need on tests, homework and essays within a Course. Students can begin by entering a desired grade (90% or \"A\" by default). Students can then copy the assignments from their syllabus. As they enter grades they have received on items so far, the calculator displays the minimum grade needed on remaining items.\r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                The application is a front-end only React site hosted in Google Cloud. I made this as an excuse to learn React. Also, I was tired of being the person in the classroom that was routinely asked by my classmates, \"What grade do I need on the final to pass this course again?\"     \r\n            </p>\r\n\r\n            <p>\r\n                I could now say, \"Go to EasyGrade.app. It's a free site that can tell you that in under a minute!\"\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EasyGrade;","import '../Article.css';\r\n\r\nfunction AICar() {\r\n    return (\r\n        <div>\r\n            <div className=\"Article-Video\">\r\n                <iframe width=\"100%\" height=\"100%\" src=\"https://www.youtube.com/embed/C9HgkgkNgkI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n            </div>\r\n            \r\n            <p className=\"Article-Text\">\r\n                This project was developed as my senior thesis in college. I came up with the idea while watching some youtube videos about autonomous cars and intersections. The video claimed that if all cars were autonomous, then at a red light they could continue simultaneously upon a green light. I thought that was incredible, but I felt it could be taken further. If the cars were autonomous, why should they stop at all at red lights? A decent scheduling algorithm should allow the cars to avoid collision.\r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                I chose to develop the project using the \"Processing\" library in Java for the visual representation. I was familiar with the javascript counterpart \"p5.js\", but wanted the multithreading support of Java. I had to explore several fields of study to complete the process in the short 2 month time frame. Linear Algebra, Scheduling Algorithms and Discrete-Event Simulation. Due to the short time-frame, I was unable to finish animated turning vehicles. However, the scheduling algorithms can handle them as well as variably sized cars/trucks. The entire application is only a 1000 lines of well structured code.\r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                The program operates at a tick rate determined by the \"Processing\" animation framework. On each tick the scheduling algorithm iterates over each car and tries to make the necessary space-time reservations for the car to travel through the intersection at the a speed between 1 m.p.h. and the maximum speed limit. As you increase the frequency of cars in each lane, the cars can get slow, but never crash nor stop. At maximum frequency the cars would form a stable pattern and speed actually increases.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AICar;","import React from 'react';\r\nimport './Projects.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport folder from './resources/folder.svg';\r\n\r\n// Articles\r\nimport VGC from './ProjectArticles/VGC';\r\nimport VirtualWebUI from './ProjectArticles/VirtualWebUI';\r\nimport BrowserUI from './ProjectArticles/BrowserUI';\r\nimport APM from './ProjectArticles/APM';\r\nimport EasyGrade from './ProjectArticles/EasyGrade';\r\nimport AICar from './ProjectArticles/AICar';\r\n\r\nclass Projects extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"Projects-Header\">\r\n                    Projects\r\n                </header>\r\n\r\n                <main className=\"Projects-Main\">\r\n                    <Router>\r\n                        <Switch>\r\n                        <Route path=\"/Projects/AVI\">\r\n                            <AICar />\r\n                        </Route>\r\n                        <Route path=\"/Projects/EZG\">\r\n                            <EasyGrade />\r\n                        </Route>\r\n                        <Route path=\"/Projects/APM\">\r\n                            <APM />\r\n                        </Route>\r\n                        <Route path=\"/Projects/VGC\">\r\n                            <VGC />\r\n                        </Route>\r\n                        <Route path=\"/Projects/VAPI\">\r\n                            <VirtualWebUI />\r\n                        </Route>\r\n                        <Route path=\"/Projects/BUI\">\r\n                            <BrowserUI />\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <div className=\"Projects-FolderRow\">\r\n                                <Link className=\"Folder Projects-Folder\" to=\"/Projects/AVI\">\r\n                                    <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">Java Simulation</span>\r\n                                    <span className=\"TinySpan\">\"Autonomous Vehicle Intersection\"</span>\r\n                                    \r\n                                </Link>\r\n                                <Link className=\"Folder Projects-Folder\" to=\"/Projects/EZG\">\r\n                                    <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">React JS Site</span>\r\n                                    <span className=\"TinySpan\">\"EasyGrade.app\"</span>\r\n                                </Link>\r\n                                <Link className=\"Folder Projects-Folder\" to=\"/Projects/APM\">\r\n                                    <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">Agilent Embedded C++</span>\r\n                                    <span className=\"TinySpan\">\"Pattern Matching Algorithm\"</span>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"Projects-FolderRow\">\r\n                                <Link className=\"Folder Projects-Folder\" to=\"/Projects/VGC\">\r\n                                    <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">Agilent .NET C#</span>\r\n                                    <span className=\"TinySpan\">\"Virtual G.C. Simulator\"</span>\r\n                                </Link>\r\n                                <Link className=\"Folder Projects-Folder\" to=\"/Projects/VAPI\">\r\n                                    <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">Agilent AWS Cloud</span>\r\n                                    <span className=\"TinySpan\">\"Virtual Browser UI (Full Stack)\"</span>\r\n                                </Link>\r\n                                <Link className=\"Folder Projects-Folder\" to=\"/Projects/BUI\">\r\n                                    <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">Agilent Web App</span>\r\n                                    <span className=\"TinySpan\">\"Browser UI (Full Stack)\"</span>\r\n                                </Link>\r\n                            </div>\r\n                        </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Projects;","export default __webpack_public_path__ + \"static/media/award.a2758288.jpg\";","export default __webpack_public_path__ + \"static/media/RY3A0877.4e58bfb2.jpg\";","import image_wedding from '../resources/RY3A0877.jpg';\r\nimport image_award from '../resources/award.jpg';\r\nimport '../Article.css';\r\n\r\n\r\nfunction About() {\r\n    const today = Date.now();\r\n    const birthday = new Date('August 10, 1997');\r\n    const ageDifMs = today - birthday.getTime();\r\n    const ageDate = new Date(ageDifMs);\r\n    const age =  Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    return (\r\n        <div>\r\n            <div className=\"Article-Media\">\r\n                <img src={image_award} />\r\n            </div>\r\n            \r\n            <p className=\"Article-Text\">\r\n                I'm Ben Girone. I was born on August 10, 1997. That makes me {age} years old at the moment. This blog post is programmed to automatically calculate that age. If you can't tell by the construction of this site, I like programming things. I first began programming with video game scripting languages in high school (~2014). I quickly developed a deep interest in the problem solving process of programming. This lead me to learn many other languages to solve more complicated problems.\r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                In college, I took my fascination with problem solving a step further and decided that a degree in computer science wasn't enough. I opted to get a degree in mathematics as well. Towards the end of college I discovered a hobby that also scratches my itch for solving complex problems. Chess! \r\n            </p>\r\n\r\n            <p className=\"Article-Text\">\r\n                Currently, I'm working at Agilent Technologies developing software and firmware solutions to better the field of Gas Chromatography. I do Full stack UI development, as well as develop cutting edge algorithms using math, statistics and machine learning. Outside of work, I still spend plenty of time developing personal projects like this site.\r\n            </p>\r\n        </div>)\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Blog.css';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport folder from './resources/folder.svg';\r\nimport About from './BlogArticles/About';\r\n\r\nclass Blog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"Blog-Header\">Blog</header>\r\n                <main className=\"Blog-Main\">\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route path=\"/Blog/About\">\r\n                                <About />\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                            <div className=\"Blog-FolderRow\">\r\n                                <Link className=\"Folder Blog-Folder\" to=\"/Blog/About\">\r\n                                    <img className=\"filter-green\" src={folder} alt=\"Folder\"/>\r\n                                    <span className=\"BigSpan\">About Me</span>\r\n                                </Link>\r\n                            </div>\r\n                            </Route>\r\n                        </Switch>\r\n                    </Router>\r\n                </main>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Blog;","import React from 'react';\r\nimport './App.css';\r\nimport CV from './CV';\r\nimport Projects from './Projects';\r\nimport Blog from './Blog';\r\nimport folder from './resources/folder.svg';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/CV\">\r\n                <CV />\r\n              </Route>\r\n              <Route path=\"/Projects\">\r\n                <Projects />\r\n              </Route>\r\n              <Route path=\"/Blog\">\r\n                <Blog />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <header className=\"App-header\">\r\n                      Hi! I'm Ben. Welcome to my site.\r\n                </header>\r\n                \r\n                <main>\r\n                    <div className=\"CV\">\r\n                        <Link className=\"Folder\" to=\"/CV\">\r\n                            <img src={folder} alt=\"Folder\"/>\r\n                            <span className=\"BigSpan\">CV</span>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"Projects\">\r\n                        <Link className=\"Folder\" to=\"/Projects\">\r\n                            <img className=\"filter-blue\" src={folder} alt=\"Folder\"/>\r\n                            <span className=\"BigSpan\">Projects</span>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"Blog\">\r\n                        <Link className=\"Folder\" to=\"/Blog\">\r\n                            <img className=\"filter-green\" src={folder} alt=\"Folder\"/>\r\n                            <span className=\"BigSpan\">Blog</span>\r\n                        </Link>\r\n                    </div>\r\n                </main>\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}